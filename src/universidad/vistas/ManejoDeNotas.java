package universidad.vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidad.entidades.Alumno;
import universidad.entidades.Inscripcion;
/**
 *
 * @author Grupo 61
 */
public class ManejoDeNotas extends javax.swing.JInternalFrame {
    

    private final DefaultTableModel modelo = new DefaultTableModel(){
        
        @Override
        public boolean isCellEditable (int f, int c){
            
            return false;
        }
    };
    
    public ManejoDeNotas() {
        
        initComponents();
        cargarCB();
        armarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLNota = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTFNota = new javax.swing.JTextField();
        jCBAlumnos = new javax.swing.JComboBox<>();
        jBSalir = new javax.swing.JButton();
        jBGuardar = new javax.swing.JButton();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(500, 400));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 400));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manipulacion de notas");

        jLNota.setForeground(new java.awt.Color(204, 204, 204));
        jLNota.setText("Ingrese la nueva nota:");

        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Seleccione un alumno:");

        jTFNota.setBackground(new java.awt.Color(102, 102, 102));
        jTFNota.setForeground(new java.awt.Color(255, 255, 255));

        jCBAlumnos.setBackground(new java.awt.Color(51, 51, 51));
        jCBAlumnos.setForeground(new java.awt.Color(255, 255, 255));
        jCBAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBAlumnosActionPerformed(evt);
            }
        });

        jBSalir.setBackground(new java.awt.Color(51, 51, 51));
        jBSalir.setForeground(new java.awt.Color(204, 204, 204));
        jBSalir.setText("Salir");
        jBSalir.setPreferredSize(new java.awt.Dimension(80, 32));
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jBGuardar.setBackground(new java.awt.Color(51, 51, 51));
        jBGuardar.setForeground(new java.awt.Color(204, 204, 204));
        jBGuardar.setText("Guardar");
        jBGuardar.setPreferredSize(new java.awt.Dimension(80, 32));
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jCBAlumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLNota)
                        .addGap(18, 18, 18)
                        .addComponent(jTFNota)
                        .addGap(18, 18, 18)
                        .addComponent(jBGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCBAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLNota))
                .addGap(18, 18, 18)
                .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCBAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBAlumnosActionPerformed
        
        limpiarTabla();
        Alumno al = (Alumno) jCBAlumnos.getSelectedItem();
        cargarDatos(al.getId());
    }//GEN-LAST:event_jCBAlumnosActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        
        dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        
        if (jTFNota.getText().isEmpty()) {
            
            JOptionPane.showMessageDialog(this, "La casilla Nota no puede estar vacia");
            return;
        }
        if (Double.parseDouble(jTFNota.getText())<0||Double.parseDouble(jTFNota.getText())>10) {
            
            JOptionPane.showMessageDialog(this, "En la casilla Nota debe ir un dato valido");
            return;
        }
        if (jCBAlumnos.getSelectedIndex() == -1) {
            
            JOptionPane.showMessageDialog(this, "Debe seleccionar una materia");
            return;
            
        }if (jTable1.getSelectedRow() == -1) {
            
            JOptionPane.showMessageDialog(this, "Seleccione una materia en la que quiera actualizar la nota.");
            return; 
        }
        
        try {
            
            Alumno alu = (Alumno)jCBAlumnos.getSelectedItem();
            int fila = jTable1.getSelectedRow();
            int idMateria =Integer.parseInt((String)modelo.getValueAt(fila , 0));
            double nota = Double.parseDouble(jTFNota.getText());
            int registro = Vista.getID().actualizarNota(alu.getId(), idMateria, nota);
            
            if (registro > 0) {
                
                JOptionPane.showMessageDialog(this, "La nota se cargo correctamente");
            } else {
                
                JOptionPane.showMessageDialog(this, "No se pudo cargar la nota");
            }
            
            limpiarTabla();
            cargarDatos(alu.getId());
        } catch (NumberFormatException ex) {
            
            JOptionPane.showMessageDialog(this, "El campo nota solo admite números");
        }
    }//GEN-LAST:event_jBGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<Alumno> jCBAlumnos;
    private javax.swing.JLabel jLNota;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFNota;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
   
    private void cargarCB() {
        
        ArrayList<Alumno> Lista = Vista.getAD().listarAlumnos();
        for (Alumno al : Lista) {
            jCBAlumnos.addItem(al);
        }
    }
    
    private void armarTabla() {
        
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Nota");
        jTable1.setModel(modelo);
    }
    
    private void cargarTabla(Inscripcion insc) {
        
        modelo.addRow(new Object[]{
            insc.getIdMateria()+"",
            insc.getMateria().getNombre(),
            Double.toString(insc.getNota())
        });   
    }
    
    private void limpiarTabla(){
        
        int fila=modelo.getRowCount()-1;
        for (int i = fila; i >=0; i--) {
            modelo.removeRow(i);
        }
    }
    
    private void cargarDatos(int id){
        
        ArrayList <Inscripcion> lista = Vista.getID().listarInscripcionesPorAlumno(id);
        for (Inscripcion inscripcion : lista) {
            cargarTabla(inscripcion);
        } 
    }
}
